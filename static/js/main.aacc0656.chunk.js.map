{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortLength","setState","LENGTH","sortAlphabet","ALPABET","reverse","reset","this","goodsReorder","goods","visibleGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,WACX,EAAKC,SAAS,CACZH,SAAUL,EAASS,UARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,WAdzB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBArB3B,EA0BES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA7BzB,4CAiCE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAjEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASW,QACZM,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MACF,KAAKpB,EAASS,OACZQ,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAUjD,OAJIlB,GACFa,EAAaL,UAGRK,EA4CgBM,CAAkBtB,EAAiB,CACtDG,aACAC,aAGF,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYrB,IAAaL,EAASW,UAGxCgB,QAASb,KAAKJ,aARhB,iCAaA,wBACEe,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYrB,IAAaL,EAASS,SAGxCkB,QAASb,KAAKP,WARhB,4BAaA,wBACEkB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAAatB,IAGnBuB,QAASb,KAAKF,QARhB,sBAaEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAaa,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAjGtC,GAAyBC,iBCvDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aacc0656.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends PureComponent<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goodsReorder = getReorderedGoods(goodsFromServer, {\n      isReversed,\n      sortType,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': sortType !== SortType.ALPABET },\n              )\n            }\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-warning',\n                { 'is-light': !isReversed },\n              )\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsReorder.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}